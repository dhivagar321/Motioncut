<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colorful To-Do List</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: linear-gradient(135deg, #2193b0, #6dd5ed);
        }

        .container {
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            width: 350px;
            text-align: center;
        }

        h1 {
            color: #333;
        }

        input {
            width: calc(100% - 24px);
            padding: 10px;
            margin: 10px 0;
            border: 2px solid #2193b0;
            border-radius: 5px;
            outline: none;
        }

        button {
            background: #2193b0;
            color: #fff;
            border: none;
            padding: 10px 15px;
            margin: 5px;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }

        button:hover {
            background: #6dd5ed;
        }

        ul {
            list-style: none;
            padding: 0;
        }

        li {
            background: #f0f8ff;
            margin: 10px 0;
            padding: 10px;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        li .task-text {
            flex-grow: 1;
            margin-right: 10px;
        }

        li .task-text.completed {
            text-decoration: line-through;
            color: grey;
        }

        li button {
            margin-left: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <input type="text" id="new-task" placeholder="Add a new task">
        <button id="add-task-btn">Add Task</button>
        <ul id="task-list"></ul>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const taskInput = document.getElementById('new-task');
            const addTaskBtn = document.getElementById('add-task-btn');
            const taskList = document.getElementById('task-list');

            const tasks = JSON.parse(localStorage.getItem('tasks')) || [];

            const saveTasks = () => {
                localStorage.setItem('tasks', JSON.stringify(tasks));
            };

            const renderTasks = () => {
                taskList.innerHTML = '';
                tasks.forEach((task, index) => {
                    const li = document.createElement('li');
                    li.innerHTML = `
                        <span class="task-text ${task.completed ? 'completed' : ''}">${task.text}</span>
                        <div>
                            <button onclick="editTask(${index})">Edit</button>
                            <button onclick="deleteTask(${index})">Delete</button>
                            <button onclick="toggleTask(${index})">${task.completed ? 'Uncomplete' : 'Complete'}</button>
                        </div>
                    `;
                    taskList.appendChild(li);
                });
            };

            const addTask = () => {
                const taskText = taskInput.value.trim();
                if (taskText) {
                    tasks.push({ text: taskText, completed: false });
                    saveTasks();
                    renderTasks();
                    taskInput.value = '';
                }
            };

            window.editTask = (index) => {
                const newTaskText = prompt('Edit your task:', tasks[index].text);
                if (newTaskText) {
                    tasks[index].text = newTaskText;
                    saveTasks();
                    renderTasks();
                }
            };

            window.deleteTask = (index) => {
                tasks.splice(index, 1);
                saveTasks();
                renderTasks();
            };

            window.toggleTask = (index) => {
                tasks[index].completed = !tasks[index].completed;
                saveTasks();
                renderTasks();
            };

            addTaskBtn.addEventListener('click', addTask);
            renderTasks();
        });
    </script>
</body>
</html>
